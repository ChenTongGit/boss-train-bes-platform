mybatis:
  type-aliases-package: com.boss.xtrain.basedata.pojo.entity
  mapper-locations: classpath:mapper/*.xml
mapper:
  mappers: com.boss.xtrain.common.core.web.dao.CommonMapper
  identity: MYSQL
spring:
  application:
    name: boss-bes-basedata
  datasource:
    url: jdbc:mysql://123.56.51.204:3306/db_base_data?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF8&allowMultiQueries=true&useAffectedRows=true&autoReconnect=true&failOverReadOnly=false
    username: root
    password: guoxinrui0622
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-test-query: SELECT 1
      max-lifetime: 30000
      minimum-idle: 3
      maximum-pool-size: 10
  redis:
    database: 0
    # Redis服务器地址
    host: 123.57.156.184
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: bosstrain
    # 连接池最大连接数（使用负值表示没有限制）
    jedis:
      pool:
        max-active: 1024
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 10000
        # 连接池中的最大空闲连接
        max-idle: 200
        # 连接池中的最小空闲连接
        min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 10000
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true
  cloud:
    nacos:
      discovery:
        server-addr: ${spring.nacos-url.nacos-host}:${spring.nacos-url.nacos-port}
        service: boss-bes-basedata
        ip: 123.56.51.204
  # 组nacos和seata服务地址

    # 组nacos和seata服务地址
  nacos-url:
    nacos-host: 123.57.156.184
#    nacos-host: 39.97.106.243
    nacos-port: 8848
  security:-url:
    host: 123.57.156.184
    port: 18006

  # 配置资源服务器
security:
  oauth2:
    client:
      clientId: bes
      clientSecret: 12345
      userAuthorizationUri: http://${spring.security-url.host}:${spring.security-url.port}/oauth/authorize
      grant-type: password
      scope: read
      access-token-uri: http://${spring.security-url.host}:${spring.security-url.port}/oauth/token
    resource:
      token-info-uri: http://${spring.security-url.host}:${spring.security-url.port}/oauth/check_token
      user-info-uri: http://${spring.security-url.host}:${spring.security-url.port}/user
    authorization:
      check-token-access: http://${spring.security-url.host}:${spring.security-url.port}/check_token
server:
  port: 18002
pagehelper:
  reasonable: true
  helper-dialect: mysql
  support-methods-arguments: true
  params: count=countsql

