<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.boss.xtrain.permission.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.boss.xtrain.permission.pojo.entity.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 08 10:19:20 CST 2020.
    -->
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="t_d_id" property="departmentId" jdbcType="BIGINT" />
    <result column="t_c_id" property="companyId" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="other" property="other" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="BIGINT" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
  </resultMap>
    <resultMap id="UserDtoMap" type="com.boss.xtrain.permission.pojo.dto.UserDTO">
        <id column="id" property="id"/>
        <result column="positionId" property="positionId"/>
        <result column="name" property="name"/>
        <result column="userId" property="id"/>
        <collection property="roleList" ofType="com.boss.xtrain.permission.pojo.entity.Role"
                    javaType="java.util.ArrayList" select="getRoles"
                    column="id">
        </collection>
    </resultMap>
  <resultMap id="RoleMap" type="com.boss.xtrain.permission.pojo.entity.Role">
    <id column="id" property="id"/>
    <result column="t_c_id" property="companyId"/>
    <result column="t_o_id" property="organizationId"/>
    <result column="name" property="name" />
    <result column="code" property="code" />
    <result column="remark" property="remark" />
    <result column="status" property="status" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="updated_by" property="updatedBy" />
    <result column="updated_time" property="updatedTime" />
    <result column="version" property="version" />
  </resultMap>
  <resultMap id="UserMap" type="com.boss.xtrain.permission.pojo.entity.User" extends="BaseResultMap">
    <id column="id" property="id"/>
  </resultMap>
  <sql id="UserColumns">
        tu.id,
        tu.status,
        tu.created_by,
        tu.created_time,
        tu.updated_time,
        tu.updated_by,
        tu.version,
        tu.name,
        tu.code,
        tu.remark,
        tu.password,
        tu.birthday,
        tu.sex ,
        tu.tel,
        tu.email,
        tu.other,
        tu.company_id,
        tu.department_id,
        tu.position_id,
        tp.name as positionName,
        tc.name AS companyName,
        td.name as departmentName
    </sql>

    <!--通过userId去user_role表查询相连的roleId-->
    <select id="getRoleByUserId" parameterType="java.lang.Long" resultMap="RoleMap">
        select  a.id,a.name  from t_role a left join user_role b on a.id = b.role_id  where b.user_id = #{Id}
    </select>

  <delete id="deleteRoleUser">
    DELETE FROM t_user_role
    WHERE t_u_id IN
    <foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </delete>

    <select id="getRoles" parameterType="com.boss.xtrain.permission.pojo.query.UserQueryDTO" resultMap="RoleMap">
        SELECT  tr.id,tr.name
        FROM t_role tr left join t_user_role tur on tr.id = tur.t_r_id
        <where>
            tur.t_u_id = #{id}
        </where>
    </select>

    <select id="getAllRoles"  parameterType="com.boss.xtrain.permission.pojo.query.RoleQueryDTO" resultMap="RoleMap">
        SELECT tr.*,tr.t_c_id as companyId,tc.name as companyName FROM t_role tr,t_company tc
        <where>
            tr.t_c_id = tc.id
            <if test="companyId != null and companyId != ''">
                AND tr.t_c_id = #{companyId}
            </if>
        </where>
    </select>
    <insert id="allocateRole" parameterType="com.boss.xtrain.permission.pojo.dto.UserRoleDTO">
        insert into user_role (id,role_id,user_id) VALUES (#{id},#{roleId},#{userId})
    </insert>
    <select id="getStatusById" parameterType="java.lang.Long" resultMap="UserMap">
        select status from t_user where id=#{id}
    </select>
    <select id="getUserByPosition" resultType="com.boss.xtrain.permission.pojo.dto.ExamServiceUsersDTO">
        select tu.name,tu.id userId from position tp ,t_user tu where tp.t_u_id = tu.id
        <if test="positionName != null and positionName != ''">
            AND tp.name = #{positionName}
        </if>
        <if test="companyId != null and companyId != ''">
            AND tp.t_c_id = #{companyId}
        </if>

    </select>


</mapper>
